@page "/learnBlazor/demoproduct"
@using System.Reflection

<h2 class="text-primary">DemoProduct</h2>

<p>Favourites Total : @SelectedFavouriteCount</p>

<p>Last Selected Product : @LastSelectedProductName</p>

<div class="border m-1 mt-2" style="background-color:azure">
    <div class="row">
        @foreach (var prod in Products)
        {
            <_IndividualProduct Product="prod" OnFavouriteUpdated="FavouriteCountUpdate" 
            OnLastSelectedProductChange = "SelectedProductUpdate">

            <FirstFragment>#1</FirstFragment>
            <SecondFragment>#2</SecondFragment>

            </_IndividualProduct>
        }
    </div>
    
    
    
</div>


@code {
    List<Demo_Product> Products = new();
    private int SelectedFavouriteCount { get; set; } = 0;
    
    private string LastSelectedProductName { get; set; }
    

    protected override void OnInitialized()
    {
        Products.Add(new()
        {
            ID = 1,
            Name = "Midnight Blaze",
            IsActive = false,
            Price = 10.99,
            ProductProperties = new()
            {
                new Demo_ProductProp { ID = 1, Key = "Flavor", Value = "Rose"},
                new Demo_ProductProp { ID = 2, Key = "Size", Value = "20oz"}, 
                new Demo_ProductProp { ID = 3, Key = "Color", Value="Purple" }
            }
        });

        Products.Add(new()
        {
            ID = 2,
            Name = "Blossom Lily",
            IsActive = true,
            Price = 10.99,
            ProductProperties = new()
            {
                new Demo_ProductProp { ID = 1, Key = "Flavor", Value = "Lily" },
                new Demo_ProductProp { ID = 2, Key = "Size", Value = "18oz" },
                new Demo_ProductProp { ID = 3,Key = "Color",Value = "White"}
            }
        });
    }

    protected void FavouriteCountUpdate(bool isSelected)
    {
        if (isSelected)
        {
            SelectedFavouriteCount++;
        }
        else
        {
            SelectedFavouriteCount--;
        }
    }

    protected void SelectedProductUpdate(string productName)
    {
        LastSelectedProductName = productName;
    }
}