@page "/learnBlazor/bindprop"
@*
 A "using" statement can be used  in place of calling the full path of the products from the demo products file. It has been added to the global imports file so it can be used in any page on the website 
*@

<div class="row border p-3">
<h3 class="text-primary">Product Summary</h3><hr/>
Name: @Product.Name<br />
Active: @Product.IsActive<br />
Price: @Product.Price<br />
This Product is: @(Product.IsActive?"Active":"Inactive")<br />
Property Selected: @selectedProp<br />
@if (!String.IsNullOrWhiteSpace(selectedProp))
{
    <p>Property Value: @Product.ProductProperties.FirstOrDefault(u=>u.Key==selectedProp).Value</p>
}
</div>
<br />
<div class="row border p-3">
    <h3 class="text-primary">Product Playground</h3><hr/>
    <div>Active: <input type="checkbox" @bind-value="@Product.IsActive" checked="@(Product.IsActive ? "checked" : null)"/> <br/>
    </div>
    <div>
        Price: <input type="number" @bind-value="@Product.Price" @bind-value:event="oninput"/> <br/>
    </div>
    <div>
        Product Properties:
        <select @bind="selectedProp">
            @foreach (var prop in Product.ProductProperties)
            {
                <option value="@prop.Key">@prop.Key</option>
            }
        </select>
        </div>

    @* Price: <input type="number" @bind=@Product.Price" @bind:event="oninput" /> *@
</div>


@code {

    private string selectedProp = "";


    Tangy_Models.LearnBlazorModels.Demo_Product Product = new()
    {
        ID = 1,
        Name = "Rose Candle",
        IsActive = true,
        Price = 10.99,
        ProductProperties = new List<Tangy_Models.LearnBlazorModels.Demo_ProductProp>()
            {
                new Demo_ProductProp { ID = 1, Key = "Colour", Value = "Black"},
                new Demo_ProductProp { ID = 2, Key = "Flavour", Value = "Rose Jasmine"},
                new Demo_ProductProp { ID = 3, Key = "Size", Value = "20oz"},
            }
    };
    }